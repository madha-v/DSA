//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

class Solution {
  public:
   
    int findCatalan(int n) {
    /* vector<long long> dp(n + 1, 0);
        dp[0] = dp[1] = 1;
        int mod = 1e9 + 7; 
   
        for (int i = 2; i <= n; i++) {
            for (int j = 0; j < i; j++) {
                dp[i] = (dp[i] + (dp[j] * dp[i - j - 1]) % mod) % mod;
            }
        }
        
        return dp[n];*/
          const int MOD = 1e9 + 7;
        vector<long long> dp(n + 1, 0);
        dp[0] = dp[1] = 1;
        
        // Computing nth Catalan number using DP
        for (int i = 2; i <= n; i++) {
            for (int j = 0; j < i; j++) {
                dp[i] = (dp[i] + (dp[j] * dp[i - j - 1]) % MOD) % MOD;
            }
        }
        
        return dp[n];
    }
};


//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {

        int n;
        cin >> n;
        Solution obj;
        cout << obj.findCatalan(n) << "\n";

        cout << "~"
             << "\n";
    }
    return 0;
}
// } Driver Code Ends
