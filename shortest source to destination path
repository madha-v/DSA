//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// User function Template for C++

class Solution {
  public:
    int shortestDistance(int N, int M, vector<vector<int>>& A, int X, int Y) {
        if (A[0][0] == 0) 
        return -1; 
        if(X==0 && Y==0)
        
            return 0;
        
        
        vector<vector<int>> directions = {{0, 1}, {1, 0}, {0, -1}, {-1, 0}};
        queue<pair<int, int>> q;
        vector<vector<int>> dist(N, vector<int>(M, -1));
        
        q.push({0, 0});
        dist[0][0] = 0;
        
        while (!q.empty()) {
            auto [r, c] = q.front();
            q.pop();
            
            if (r == X && c == Y)
            return dist[r][c]; 
            
            for (auto dir : directions) {
                int nr = r + dir[0], nc = c + dir[1];
                
                if (nr >= 0 && nr < N && nc >= 0 && nc < M && A[nr][nc] == 1 && dist[nr][nc] == -1) {
                    q.push({nr, nc});
                    dist[nr][nc] = dist[r][c] + 1; 
                }
            }
        }
        
        return -1; 
    }
};

//{ Driver Code Starts.
int main() {
    int t;
    cin >> t;
    while (t--) {
        int N, M, x, y;
        cin >> N >> M;
        vector<vector<int>> v(N, vector<int>(M));
        for (int i = 0; i < N; i++)
            for (int j = 0; j < M; j++) cin >> v[i][j];
        cin >> x >> y;
        Solution ob;
        cout << ob.shortestDistance(N, M, v, x, y) << "\n";
    
cout << "~" << "\n";
}
}
// } Driver Code Ends
