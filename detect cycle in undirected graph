 class solution {
   public:
  bool detect(int node, int parent, vector<vector<int>>& adj, vector<bool>& visited) {
        visited[node] = true;
        for (int neighbor : adj[node]) {
            if (neighbor == parent) 
            
            continue;  
            
            if (visited[neighbor])
            return true; 
            
            if (detect(neighbor, node, adj, visited)) 
            return true;
        }
        return false;
    }

    bool isCycle(vector<vector<int>>& adj) {
         int n = adj.size();
        vector<bool> visited(n, false);

        for (int i = 0; i < n; i++) {  
            if (!visited[i]) {
                if (detect(i, -1, adj, visited)) 
                return true;
            }
        }
        return false;
    
    }
};
