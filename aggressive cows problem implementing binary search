class Solution {
    bool cowsplace(vector<int> &stalls, int mid, int k)
{
    int c = 1;  
    int pos = stalls[0];

    for (int i = 1; i < stalls.size(); i++)
    {
        if (stalls[i] - pos >= mid)
        {
            c++;
            pos = stalls[i];  
        }
      if(c>=k)
      {
          return true;
      }
    }
    return false;
}
  public:

    int aggressiveCows(vector<int> &stalls, int k) {

        
          sort(stalls.begin(), stalls.end()); 

    int low = 1, high = stalls.back() - stalls[0];  
    int ans = 0;

    while (low <= high)
    {
        int mid = low + (high - low) / 2;

        if (cowsplace(stalls, mid, k))
        {
            ans = mid;  
            low=mid+1;
        }
        else
        {
            high = mid - 1; 
        }
    }
    return ans;

    }
};
