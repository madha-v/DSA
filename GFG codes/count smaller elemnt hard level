//{ Driver Code Starts

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

// User function Template for C++
//  User function template for C++


class Solution {
public:
    void merge(vector<pair<int, int>> &arr, vector<int> &count, int left, int mid, int right) {
        vector<pair<int, int>> temp;
        int i = left, j = mid + 1;
        int rightCount = 0;

        while (i <= mid && j <= right) {
            if (arr[i].first > arr[j].first) {
                rightCount++;
                temp.push_back(arr[j++]);
            } else {
                count[arr[i].second] += rightCount;
                temp.push_back(arr[i++]);
            }
        }

        while (i <= mid) {
            count[arr[i].second] += rightCount;
            temp.push_back(arr[i++]);
        }

        while (j <= right) {
            temp.push_back(arr[j++]);
        }

        for (int k = left; k <= right; k++) {
            arr[k] = temp[k - left];
        }
    }

    void mergeSort(vector<pair<int, int>> &arr, vector<int> &count, int left, int right) {
        if (left >= right) return;
        int mid = left + (right - left) / 2;
        mergeSort(arr, count, left, mid);
        mergeSort(arr, count, mid + 1, right);
        merge(arr, count, left, mid, right);
    }

    vector<int> constructLowerArray(vector<int> &arr) {
        int n = arr.size();
        vector<int> count(n, 0);
        vector<pair<int, int>> indexedArr;

        for (int i = 0; i < n; i++) {
            indexedArr.push_back({arr[i], i});
        }

        mergeSort(indexedArr, count, 0, n - 1);
        return count;
    }
};


//{ Driver Code Starts.
int main() {
    int t;

    cin >> t;
    cin.ignore();
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        int n = arr.size();
        Solution ob;
        vector<int> a = ob.constructLowerArray(arr);
        for (int i = 0; i < n; i++) {
            cout << a[i] << " ";
        }
        cout << "\n~\n";
    }
    return 0;
}
// } Driver Code Ends
