//{ Driver Code Starts
#include <bits/stdc++.h>
#include <math.h>
#include <stdio.h>
using namespace std;


// } Driver Code Ends

class Solution {
public:
    int minDiff(vector<int>& arr, int k, int m, int t) {
        int n = arr.size();
        if(k > n)
        return -1; 
        

        sort(arr.begin(), arr.end());
        
       
        vector<int> prefix(n + 1, 0);
        for (int i = 0; i < n; i++) {
            prefix[i + 1] = prefix[i] + (arr[i] >= t ? 1 : 0);
        }
        
        int ans = INT_MAX;

        for (int i = 0; i <= n - k; i++) {
            int j = i + k - 1;
            
            int count = prefix[j + 1] - prefix[i];
            if (count >= m) {
                ans = min(ans, arr[j] - arr[i]);
            }
        }
        
        return (ans == INT_MAX ? -1 : ans);
    }
};



//{ Driver Code Starts.

int main() {
    string ts;
    getline(cin, ts);
    int t = stoi(ts);
    while (t--) {

        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        string ks;
        getline(cin, ks);
        int k = stoi(ks);
        string ms;
        getline(cin, ms);
        int m = stoi(ms);
        string ts;
        getline(cin, ts);
        int th = stoi(ts);
        Solution obj;
        cout << obj.minDiff(arr, k, m, th) << endl;
        cout << "~" << endl;
    }
    return 0;
}
// } Driver Code Ends
