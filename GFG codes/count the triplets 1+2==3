//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;


// } Driver Code Ends

// User function template for C++
class Solution {
  public:

    int countTriplet(vector<int>& arr) {
        int n = arr.size();
        int count = 0;
        
        // Sort the array
        sort(arr.begin(), arr.end());
        
        // Iterate over the array
        for (int k = 2; k < n; k++) {
            int target = arr[k];
            int i = 0, j = k - 1;
            
            // Use two pointers to find pairs (arr[i], arr[j]) such that arr[i] + arr[j] = arr[k]
            while (i < j) {
                int sum = arr[i] + arr[j];
                
                if (sum == target) {
                    count++;  // Found a valid triplet
                    i++;
                    j--;
                } 
                else if (sum < target) {
                    i++;
                } 
                else {
                    j--;
                }
            }
        }
        
        return count;
    }
};

//{ Driver Code Starts.

int main() {
    string ts;
    getline(cin, ts);
    int t = stoi(ts);
    while (t--) {
        vector<int> arr;
        string input;
        getline(cin, input);
        stringstream ss(input);
        int number;
        while (ss >> number) {
            arr.push_back(number);
        }
        Solution obj;
        int res = obj.countTriplet(arr);
        cout << res << endl;
        cout << "~" << endl;
        // string tl;
        // getline(cin, tl);
    }
    return 0;
}

// } Driver Code Ends
