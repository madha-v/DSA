class solution{
public:
    void BFS(int node,vector<vector<int>>&adj , vector<bool>&visited ,stack<int>&s)
    {
        visited[node]=1;
        for(int j=0;j<adj[node].size();j++)
        {
            if(!visited[adj[node][j]])
            {
                BFS(adj[node][j],adj ,visited ,s);
            }
            
        }
        s.push(node);
    }

    
    
    vector<int> topologicalSort(vector<vector<int>>& adj) {
        int n=adj.size();
        stack<int>s;
        vector<bool>visited(n,0);
        
        for(int i=0;i<n;i++)
        {
            if(!visited[i])
            {
                BFS(i,adj,visited,s);
            }
        }
        vector<int>ans;
        while(!s.empty())
        {
            ans.push_back(s.top());
            s.pop();
        }
            return ans;
    }
};
